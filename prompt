# Modify prompt for source (SSH/screen/etc)
SSH_FLAG=0
SSH_IP=$(echo $SSH_CLIENT | awk '{ print $1 }')

if [ "$SSH_IP" ] ; then
    SSH_FLAG=1
fi

SSH2_IP=$(echo $SSH2_CLIENT | awk '{ print $1 }')

if [ "$SSH2_IP" ] ; then
    SSH_FLAG=1
fi

if [ "$SSH_FLAG" -eq 1 ] ; then
    CONN="ssh"
elif [ -z "$SESS_SRC" ] ; then
    CONN="lcl"
elif [ "$SESS_SRC" == "(:0.0)" -o "$SESS_SRC" == "" ] ; then
    CONN="lcl"
else
    CONN="tel"
fi

if [ "$CONN" == "lcl" ] ; then
    CONN=
else
    CONN="<$CONN> "
fi

if [ "$TERM" == "screen" ] ; then
    SNAME=$(echo $STY | perl -pe 's/\d+\.//g')
    if [ "$(echo $SNAME | perl -pe 's/(pts).*/$1/g')" = "pts" ] ; then
        SNAME=screen
        SNAME=" <$SNAME>"
    fi
fi

BRANCH=
REPO=
GITINFO="\[\033"
if git rev-parse --abbrev-ref HEAD 1> /dev/null 2>&1 ; then
    BRANCH=$(git rev-parse --abbrev-ref HEAD)
    REPO="$(basename "$(git rev-parse --show-toplevel)")"

    GITINFO="\[\033[01;35m\]$REPO\[\033[01;33m\] ($BRANCH) "
fi

LOC="\u@\h"
DIR="\[\033[01;34m\]\W"
if [ "$REPO" != "" ] ; then
    DIR="$(pwd)"
    #~ echo $DIR
    DIR="$(echo "$REPO||$DIR" | perl -ne 'my ($a, $b) = split(/\|\|/, $_); $b =~ s/^.*$a\/?/\//; print $b;')"
    #~ echo $DIR
fi

if [[ "$USERNAME" == "root" ]]; then
    LOC_COLOR="\[\033[01;35m\]"
    PROMPT_CHAR="#"
else
    LOC_COLOR="\[\033[01;31m\]"
    PROMPT_CHAR="$"
fi

if [[ -f ${HOME}/.bash_magic_dir ]]; then
    source ${HOME}/.bash_magic_dir
fi
BASH_MAGIC_DIR=${BASH_MAGIC_DIR:-~/.bash.d}
BASH_MAGIC_DIR="${BASH_MAGIC_DIR/#\~/$HOME}"
for FILENAME in ${BASH_MAGIC_DIR}/* ; do
    FILE="$(basename "${FILENAME}")"
    FILEVAR="$(echo IMPORT_${FILE} | tr 'a-z' 'A-Z')"
    FILELVL="$(echo LVL_${FILE} | tr 'a-z' 'A-Z')"
    if [[ "${!FILELVL}" -ne "${SHLVL}" ]]; then
        declare -x "${FILEVAR}=0"
        declare -x "${FILELVL}=${SHLVL}"
    fi
    if [[ -f ${FILENAME} ]] ; then
        if [[ ${FILENAME} -nt ${BASH_MAGIC_DIR}/archive/${FILE} ]]; then
            echo "back up ${FILE}"
            cp ${FILENAME} ${BASH_MAGIC_DIR}/archive/${FILE}
        fi
        if [[ "$(eval "stat ${STAT_PARAMS} ${FILENAME}")" -gt "${!FILEVAR}" ]]; then
            echo "source ${FILE}"
            declare -x "${FILEVAR}=$(eval "stat ${STAT_PARAMS} ${FILENAME}")"
            source $FILENAME
        fi
    fi
done

export PROMPT_COMMAND="$(cat ${BASH_MAGIC_DIR}/.prompt_command | paste -sd ";" -)"
